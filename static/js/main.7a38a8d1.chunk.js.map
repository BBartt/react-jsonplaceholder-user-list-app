{"version":3,"sources":["components/Results/index.js","constants.js","utils/index.js","App.js","index.js"],"names":["Results","error","isLoading","users","length","className","map","id","name","username","BASE_URL","fetchData","url","onS","onF","fetch","then","res","ok","Error","status","json","catch","err","App","useState","userName","setUserName","setUsers","setIsLoading","undefined","setError","onFetchSuccess","errorMessage","data","onFetchError","console","message","useEffect","a","fetchUsers","onSubmit","event","preventDefault","autoFocus","placeholder","value","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAsBeA,MApBf,YAA8C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,MAEjC,OAAGD,EAAkB,6CAElBD,EAAc,8BAAMA,KAEX,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAS,EACX,qBAAKC,UAAU,UAAf,SACI,oBAAIA,UAAU,KAAd,SACKF,EAAMG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,SAAZ,OACP,qBAAaJ,UAAU,KAAvB,UACKG,EADL,IACY,IACR,uBAAMH,UAAU,WAAhB,cAA6BI,OAFxBF,UAOrB,MCnBHG,EAAW,6CCAXC,EAAY,SAACC,EAAKC,EAAKC,GAClCC,MAAMH,GACHI,MAAK,SAACC,GACL,IAAKA,EAAIC,GAAI,MAAM,IAAIC,MAAM,+BAAiCF,EAAIG,QAElE,OAAOH,EAAII,UAEZL,MAAK,SAACC,GAAD,OAASJ,EAAII,MAClBK,OAAM,SAACC,GAAD,OAAST,EAAIS,OC8DTC,EAjEH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAGUF,mBAAS,IAHnB,mBAGTtB,EAHS,KAGFyB,EAHE,OAKkBH,oBAAS,GAL3B,mBAKTvB,EALS,KAKE2B,EALF,OAMUJ,wBAASK,GANnB,mBAMT7B,EANS,KAMF8B,EANE,KAQVC,EAAiB,SAACC,GAAD,OAAkB,SAACC,GACxCH,EAAS,IACTF,GAAa,KACb,OAACK,QAAD,IAACA,OAAD,EAACA,EAAM9B,QAAS,GAAK2B,EAASE,GAC9BL,GAAa,OAAJM,QAAI,IAAJA,OAAA,EAAAA,EAAM9B,QAAS,EAAI8B,EAAO,MAG/BC,EAAe,SAAClC,GACpBmC,QAAQnC,MAAR,cAA6BA,GAE7B4B,GAAa,GACbE,EAAS9B,EAAMoC,UAGjBC,qBAAU,YACQ,uCAAG,sBAAAC,EAAA,sDACjBV,GAAa,GAEblB,EAAUD,EAAUsB,EAAe,WAAYG,GAH9B,2CAAH,qDAMhBK,KACC,IAiBH,OACE,sBAAKnC,UAAU,UAAf,UACE,4CACA,sBAAMoC,SAlBW,SAACC,GAGpB,GAFAA,EAAMC,kBAEDjB,EAAStB,OAAQ,OAAO2B,EAAS,2BAEtCF,GAAa,GACbF,EAAY,IAEZhB,EAAU,GAAD,OACJD,EADI,iBACagB,GACpBM,EAAe,8BACfG,IAOA,SACE,uBACES,WAAS,EACTvC,UAAU,QACVwC,YAAY,yBACZC,MAAOpB,EACPqB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BnB,EAAYmB,QAIrD,cAAC,EAAD,CAAS7C,MAAOA,EAAOC,UAAWA,EAAWC,MAAOA,QC5D1D8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a38a8d1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Results({ error, isLoading, users }){\r\n\r\n    if(isLoading) return <div>Loading...</div>\r\n    \r\n    if(error) return <div>{error}</div>\r\n    \r\n    return users?.length > 0 ? (\r\n                <div className=\"results\">\r\n                    <ol className=\"ol\">      \r\n                        {users.map(({id, name, username}) => (\r\n                            <li key={id} className=\"li\">\r\n                                {name} {\" \"}                \r\n                                <span className=\"userName\">@{username}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            ) : null\r\n}\r\n\r\nexport default Results;\r\n","export const BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\r\n","export const fetchData = (url, onS, onF) => {\r\n  fetch(url)\r\n    .then((res) => {\r\n      if (!res.ok) throw new Error(\"Server responds with error: \" + res.status);\r\n\r\n      return res.json();\r\n    })\r\n    .then((res) => onS(res))\r\n    .catch((err) => onF(err));\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Results from \"./components/Results\";\r\nimport { BASE_URL } from \"./constants\";\r\nimport { fetchData } from \"./utils\";\r\n\r\nconst App = () => {\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const onFetchSuccess = (errorMessage) => (data) => {\r\n    setError(\"\");\r\n    setIsLoading(false);\r\n    !data?.length > 0 && setError(errorMessage);\r\n    setUsers(data?.length > 0 ? data : []);\r\n  };\r\n\r\n  const onFetchError = (error) => {\r\n    console.error(`catch error`, error);\r\n\r\n    setIsLoading(false);\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n      \r\n      fetchData(BASE_URL, onFetchSuccess(\"No data\"), onFetchError);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!userName.length) return setError(\"Field can not be empty.\");\r\n\r\n    setIsLoading(true);\r\n    setUserName(\"\");\r\n\r\n    fetchData(\r\n      `${BASE_URL}?name=${userName}`,\r\n      onFetchSuccess(\"There is no user like this\"),\r\n      onFetchError\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Users list</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          autoFocus\r\n          className=\"input\"\r\n          placeholder=\"Search by user name...\"\r\n          value={userName}\r\n          onChange={({ target: { value } }) => setUserName(value)}\r\n        />\r\n      </form>\r\n\r\n      <Results error={error} isLoading={isLoading} users={users} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}